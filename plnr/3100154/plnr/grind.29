

(PROG (IBASE EXPR ^W EOF)
      (SETQ IBASE 8.)
      (ERRSET (REMGRIND) NIL)
      (SETQ EOF (LIST NIL))
      (MAPC 'PRINC (LIST 'LOADING
			 '/ 
			 (CAR (STATUS UREAD))
			 '/ 
			 (CADR (STATUS UREAD))))
 READLOOP
      (COND ((EQ EOF (SETQ EXPR (READ EOF)))
	     (EVAL (APPEND '(SSTATUS MACRO /;) OLDSEMISTATUS))
	     (RETURN '*))
	    (T (PRINT (EVAL EXPR)) (GO READLOOP))))

(PROG NIL
      (DEFUN OLDSTATUS
	     FEXPR
	     (X)
	     (COND ((SETQ STAT (APPLY 'STATUS
				      (LIST 'MACRO (CAR X))))
		    (APPEND (LIST (LIST 'QUOTE (CAR STAT)))
			    (CDR STAT)))
		   ('(NIL))))
      (SETQ OLDSEMISTATUS (OLDSTATUS /;))
      (DEFUN THSEMI NIL (PROG NIL
			 LP   (COND ((EQ (READCH) (ASCII 13.))
				     (RETURN NIL)))
			      (GO LP)))
      (SSTATUS MACRO /; 'THSEMI S))

(PROG NIL							       ;INITIALIZE GLOBAL VARIABLES
      (SETQ *TLINE 120.)					       ;*TLINE IS THE TOTAL SPACE ALLOWED
      (SETQ *SFP 70.)						       ;*SFP IS THE SPACE FOR PROGRAM
      (SETQ *GAP 1.)						       ;*GAP IS THE SPACE BETWEEN THE PROGRAM AND
      (SETQ GRINDLINCT 8.)					       ;COMMENTS NUMBER OF LINES LEFT ON PAGE
      (SETQ COMNT% NIL)
      (SETQ *SPACE% T)
      
      ;;FLAG FOR WHETHER PREVIOUS SPRINTED EXPRESSION WAS A LEFT-COMMENT
      ;;USED FOR INSERTING EXTRA CARRIAGE RETURNS
      (SETQ PREVIOUS-LEFT-COMMENT? NIL)
      (SETQ PREVIOUS-QUOTE? NIL)				       ;FLAG FOR WHETHER PREVIOUS SPRINTED L WAS /'
      )

(DEFUN TRACEGRIND
       NIL							       ;BREAK FUNCTION TRANSPARENT TO CHRCT
       (PROG (CHRCT*)
	     (SETQ CHRCT* CHRCT)
	     (BREAK T T)
	     (TURPRI)
	     (INDENT-TO CHRCT*)
	     (RETURN T)))
(DEFUN REMGRIND
       FEXPR
       (L)
       (PROG NIL
	     (MAPC '(LAMBDA (X) (REMPROP X 'FEXPR))
		   '(GRINDEF OLDSTATUS GRIND GRIND0 REMGRIND))
	     (MAPC '(LAMBDA (X) (REMPROP X 'EXPR))
		   '(TURPRI INDENT-TO TRACEGRIND GRINDLINE
			    LEFT-COMMENT
			    PRINALLCMNT
			    PRIN50COM
			    COMNT%
			    SPRINT
			    MAXPAN
			    PANMAX))
	     (ERRSET (*REARRAY '/	) NIL)
	     (ERRSET (*REARRAY '/ ) NIL)
	     (SSTATUS GCTWA)))

(DEFUN TURPRI EXPR NIL (TERPRI) (SETQ GRINDLINCT
				      (REMAINDER (PLUS 59. GRINDLINCT)
						 60.)))
(DEFUN GRINDEF
 FEXPR
 (L)
 
 ;;(GRINDEF <ATOMS>) GRINDS THE EXPR, FEXPR, MACRO AND VALUE PROPS OF THE ATOMS
 ;;(GRINDEF (INDICATORS) <ATOMS>) CAUSES GRINDING OF PROPERTIES OF ATOMS
 ;;	UNDER INDICATORS IN ADDITION TO STANDARD GRINDEF
 ;;MODIFIED SO THAT IT RETURNS DONE RATHER THAN A NON-PRINTING LISP ERROR
 ;;BECAUSE THVAL CATCHES THE ERROR
 ((LAMBDA (H)
   (MAPC
    '(LAMBDA (C)
      (COND
       ((ATOM C)
	(MAPC
	 '(LAMBDA (F)
	   (COND ((SETQ L (GET C F))
		  (TURPRI)
		  (TURPRI)
		  (COND ((OR (EQ F 'MACRO)
			     (EQ F 'EXPR)
			     (EQ F 'FEXPR))
			 (SPRINT (CONS 'DEFUN
				       (CONS C
					     (COND ((EQ F
							'EXPR)
						    (CDR L))
						   ((CONS F
							  (CDR L))))))
				 LINEL
				 0.))
			((SPRINT (LIST 'DEFPROP C L F)
				 LINEL
				 0.))))))
	 H))
       ((SETQ H (APPEND C H)))))
    L))
  '(EXPR FEXPR VALUE MACRO))
 (TURPRI)
 T)
(DEFUN SPRINT
 
 ;;LISTS TOO LONG FOR A SINGLE LINE ARE SPRINTED IN 3 POSSIBLE FORMS
 ;;	FORM1 = (S1	FORM2 = (S1 S2	   FORM3 = (S1 S2  (SPRINT LAST))
 ;;		 S2		    S3)
 ;;		 S3)
 ;;TAG? AND FORM3? WERE A SINGLE VARIABLE IN GRIND 7
 (L N M)
 
 ;;L = S-EXPRESSION TO BE SPRINTED
 ;;N = ROOM (LINEL-N IS INDENTATION)
 ;;M = UNBALANCED RIGHT PARENTHESES TO BE PRINTED
 (PROG (PROG? TAG? FORM3? DEFINITION?)
       
       ;;IF WE HAVE A COMMENT HAND IT TO COMNT% AND RETURN
       (COND ((EQ (CAR L) 'RIGHT-COMMENT) (COMNT% NIL) (RETURN))
		((AND (EQ (CAR L)'LEFT-COMMENT) COMNT%)(COMNT% ())))
       (INDENT-TO N)
       
       ;;COND FOR PRINTING INSERTED COMMENTS (LEFT-COMMENT)
       ;;CURRENTLY DOES NOT CHECK LENGTH OF COMMENT. JUST MAKES CHRCT BIG
       ;;SEE NOTE ON LINEL AND CHRCT IN IPG'S  AI 119
       (COND ((EQ (CAR L) ' LEFT-COMMENT)
	      (COND ((NULL PREVIOUS-LEFT-COMMENT?) (TURPRI)
						   (INDENT-TO N)))
	      (SETQ CHRCT 1000.)
	      (PRINC '/;)
	      (MAPC 'PRINC (CADR L))
	      (TURPRI)
	      (SETQ PREVIOUS-LEFT-COMMENT? T)
	      (RETURN (SETQ PREVIOUS-QUOTE? NIL))))
       
       ;;PRESERVING '
       (COND ((EQ (CAR L) 'QUOTE)
	      (SETQ PREVIOUS-QUOTE? T)
	      (PRINC '/')
	      (RETURN (SPRINT (CADR L) CHRCT M))))
       
       ;;DONE IF L CAN FIT ON LINE OR IF L AN ATOM
       (AND (OR (LESSP (PLUS M -1. (FLATSIZE L)) CHRCT) (ATOM L))
	    (OR (SETQ PREVIOUS-LEFT-COMMENT? NIL)
		(SETQ PREVIOUS-QUOTE? NIL)
		(RETURN (GRINDLINE L))))
       (SETQ PROG? (MEMQ (CAR L) '(THPROG PROG)))
       
       ;;L AN S-EXPR THAT CANNOT FIT ON LINE - PRINT OPEN PAREN
       ;;CHRCT = N+1
       (PRINC '/()
       (ERRSET
	
	;;THIS "AND" HANDLES FORM2 AND FORM3 SPRINTS
	(AND
	 
	 ;;CONTINUE IF L NOT A DOTTED PAIR
	 (NOT (ATOM (CDR L)))
	 
	 ;;CONTINUE IF L A PROG OR CONTINUE SETTING N TO NUMBER OF LINES
	 ;;NECESSARY TO SPRINT L AS FORM2
	 (OR PROG?
	     (SETQ N
		   (MAXPAN (CDR L)
			   (DIFFERENCE CHRCT (FLATSIZE (CAR L)) 1.))))
	 
	 ;;CONTINUE IF (CAR L) A FUNCTION NAME OR MORE EFFICIENT TO
	 ;;SPRINT L AS FORM2 THAN FORM1
	 (OR (ATOM (CAR L)) (NOT (LESSP (MAXPAN (CDR L) CHRCT) N)))
	 
	 ;;FORM2 OR FORM3 - S1 IS PRINTED
	 (PROG NIL
	       
	       ;;FORM3? = T IF MORE EFFICIENT TO SPRINT L AS FORM3 THAN AS FORM2
	       (ERRSET
		(SETQ
		 FORM3?						       ;NOT FORM3 IF (LAST L) IS A COMMENT
								       ;ORIGINALLY (CAAR (LAST L)). THIS CAN CAUSE
								       ;ERROR MESSAGE				       ;SOLUTION MAYBE WHAT IS DESIRED IS (CAR (LAST
		 (AND (NOT (EQ (CAR (LAST L)) 'RIGHT-COMMENT))	       ;L)) ALTERNATIVELY, ERRSET CAN TAKE NIL SECOND
		      (LESSP (MAXPAN (LAST L)			       ;ARG TO PREVENT PRINTOUT
				     (*DIF (PLUS (FLATSIZE (LAST L))
						 CHRCT)
					   (FLATSIZE L)))
			     N)))
		NIL)
	  A    (GRINDLINE (CAR L))
	       (PRINC '/ )
	       (AND (CDR (SETQ L (CDR L))) FORM3? (GO A)))))
       
       ;;L TO BE SPRINTED IN FORM1 - INDENTATION UPDATED
       (SETQ N CHRCT)
       (SETQ DEFINITION? (MEMQ (CAR L) '(DEFPROP DEFUN LAMBDA
						 LABEL
						 THCONSE
						 THANTE
						 THERASING)))
       
       ;;CADR'S ARE SPRINTED N FORM1 FASHION WITH THE EXCEPTION OF TAGS WHICH ARE UNINDENTED 5
  B    (SPRINT (CAR L)
	       (COND ((SETQ TAG? (AND PROG? (CAR L) (ATOM (CAR L))))
		      (PLUS N 5.))
		     (N))
	       (COND ((NULL (SETQ L (CDR L))) (ADD1 M))
		     ((ATOM L) (PLUS 4. M (FLATSIZE L)))
		     (0.)))
       
       ;;DONE (CDR S-EXPR) IS AN ATOM
       ;;IF NON-NIL, S-EXPR IS DOTTED PAIR, OTHERWISE A LIST
  D    (COND ((ATOM L) (AND L (PRINC '/ /./ ) (GRINDLINE L))
		       (SETQ PREVIOUS-LEFT-COMMENT? NIL)
		       (SETQ PREVIOUS-QUOTE? NIL)
		       
		       ;;IT IS POSSIBLE THAT WE WILL PRINT THE REMAINING /; AFTER A COMMENT,
		       ;;IN WHICH CASE WE HAVE TO RE-INDENT
		       (INDENT-TO N)
		       (RETURN (PRINC '/)))))
       
       ;;CARRIAGE RETURN IF TWO TAGS IN A ROW OR IF INDENTATION EXCEEDED BECAUSE
       ;;OF TAG OR S-EXPRESSION JUST SPRINTED. DO NOT CARRIAGE RETURN IF DEFINTION
  C    (COND (DEFINITION? (SETQ DEFINITION? NIL) (PRINC '/ ))
	     ((OR (AND (NULL PREVIOUS-QUOTE?) (LESSP CHRCT N))
		  (AND TAG? (ATOM (CAR L))))
	      
	      ;;CHECK FOR COMMENTS SINCE WE ARE ABOUT TO DO A CARRIGE RETURN,
	      ;;NOTE THAT COMNT% RETURNS NIL IF THE CURRENT LINE IS DONE,
	      ;;IN WHICH CASE WE WILL HAVE EXTRA PARENS TO HANDEL
	      (AND (NULL (COMNT% T)) (TURPRI) (GO C))
	      (TURPRI)))
       
       ;;COMNT% CDR'S L. THIS IS A CHECK FOR WHETHER L IS NOW NIL
       (COND ((ATOM L) (GO D)))
       (GO B)))

(DEFUN MAXPAN
       (L N)
       
       ;;ESTIMATES NUMBER OF LINES NECESSARY TO SPRINT L IN LINE OF SIZE N.
       ;;LESS COSTLY THAN SPRINT BECAUSE FORM2 IS ALWAYS CHOSEN WHEN S1 
       ;;IS AN ATOM, ELSE FORM1 IS CHOSEN. FORM2 IS MORE COSTLY OF SPACE
       ;;ON A LINE THAN FORM1. THUS ESTIMATE CAN REACH A DEAD END BECAUSE 
       ;;INDENT HAS MOVED OFF THE RIGHT SIDE OF THE PAGE.  IN THIS CASE, 
       ;;CONTROL IS RETURNED TO NEAREST ERRSET WITH A LARGE NUMBER
       (PROG (G)
	     (SETQ G 0.)
	A    (SETQ G (PLUS G (PANMAX (CAR L)
				     N
				     (COND ((NULL (SETQ L (CDR L)))
					    (ADD1 M))
					   ((ATOM L)
					    (PLUS M 4. (FLATSIZE L)))
					   (0.)))))
	     (AND (ATOM L) (RETURN G))
	     (GO A)))

(DEFUN PANMAX
       (L N M)
       (COND ((LESSP (PLUS M -1. (FLATSIZE L)) N) 1.)
	     ((OR (LESSP N 3.) (ATOM L)) (ERR '(40.)))
	     ((EQ (CAR L) 'LEFT-COMMENT) 1.)
	     ((EQ (CAR L) 'RIGHT-COMMENT) 0.)
	     ((AND (NOT (ATOM (CDR L)))
		   (ATOM (CAR L))
		   (SETQ N (DIFFERENCE N 1. (FLATSIZE (CAR L))))
		   (SETQ L (CDR L))
		   NIL))
	     ((MAXPAN L (SUB1 N)))))
(DEFUN GRINDLINE
       (L)
       (COND ((ATOM L) (PRIN1 L))
	     ((EQ (CAR L) 'QUOTE) (PRINC '/')
				  (GRINDLINE (CADR L)))
	     ((PRINC '/()
	      (PROG NIL
	       GO   (GRINDLINE (CAR L))
		    (SETQ L (CDR L))
		    (AND (NULL L) (PRINC '/)) (RETURN T))
		    (PRINC '/ )
		    (GO GO))))
       T)

(DEFUN GRIND
       
       ;;GRINDS L AND FILES RESULT UNDER SAME NAME
       ;;USE > TO AVOID ERASING ORIGINAL
       FEXPR
       (L)
       (PROG (LINEL)
	     (SETQ LINEL *SFP)
	     (EVAL (APPLY 'GRIND0 L))
	     (TERPRI)
	     (PRINC 'FILE/ GROUND/ AND/ FILED/ AS/ )
	     (RETURN (COND ((NULL (CDDR L)) (APPEND L (CRUNIT)))
			   (L)))))
(DEFUN GRIND0
       
       ;;GRINDS FILE L AND OUTPUTS TO .LISP. OUTPUT
       ;;RETURNS '(UFILE L)
       FEXPR
       (L)
       (PROG (OLDSEMISTATUS OLDDOLLARSTATUS
			    *NOPOINT
			    BASE
			    IBASE
			    G
			    ^Q
			    ^R
			    ^W
			    EOF)
	     (SETQ BASE 10.)
	     (SETQ IBASE 8.)
	     (SETQ EOF (LIST NIL))
	     (APPLY 'UREAD L)
	     (UWRITE)
	     
	     ;;SAVE READ MACRO STATUS
	     (SETQ OLDSEMISTATUS (OLDSTATUS /;))
	     (SETQ OLDDOLLARSTATUS (OLDSTATUS $))
	     (SSTATUS MACRO /; 'LISTIFY-COMMENT)
	     (SSTATUS MACRO $ NIL)
	     (SETQ ^Q (SETQ ^R (SETQ ^W (SETQ GRINDLINCT 59.))))
	A    (COND ((EQ EOF (SETQ G (READ EOF)))
		    (EVAL (APPEND '(SSTATUS MACRO /;)
				  OLDSEMISTATUS))
		    (EVAL (APPEND '(SSTATUS MACRO $)
				  OLDDOLLARSTATUS))
		    (RETURN (CONS 'UFILE L))))
	     (COND ((EQ (CAR G) 'RIGHT-COMMENT)
		    (SETQ COMNT% (CADR G))
		    (PRINALLCMNT)
		    (GO A))
		   
		   ;;DO NOT SPACE BETWEEN TOP LEVEL LEFT COMMENTS
		   ((AND PREVIOUS-LEFT-COMMENT?
			 (EQ (CAR G) 'LEFT-COMMENT)))
		   ((LESSP (TURPRI)
			   (CAR (ERRSET (REMAINDER (PANMAX G CHRCT 0.)
						   60.))))
		    (SETQ GRINDLINCT 59.)
		    (TYO 12.)
		    (SETQ CHRCT LINEL))
		   ((COND (PREVIOUS-LEFT-COMMENT?) ((TURPRI)))))
	     (SPRINT G CHRCT 0.)
	     (AND COMNT% (PRINALLCMNT))
	     (GO A)))


((LAMBDA (G F H) (APPLY G '(/	 16.)) (APPLY G '(/  8.)))
 '(LAMBDA (M N) (*ARRAY M T N) (APPLY H NIL))
 '(LAMBDA (N) (COND ((NOT (LESSP N 0.))
		     (APPEND (GET M 'PNAME)
			     (CADDR (STORE (APPLY M (LIST N))
					   (LIST (CAR NIL)
						 'PNAME
						 (APPLY H NIL))))))))
 '(LAMBDA NIL (APPLY F (LIST (SUB1 N)))))

(DEFUN PRINALLCMNT
       NIL
       (PROG NIL PL (PRIN50COM) (COND (COMNT% (TURPRI) (GO PL)))))

(DEFUN PRIN50COM
       NIL
       (PROG (TSP)
	     (SETQ LINEL *TLINE)
	     (SETQ CHRCT (PLUS CHRCT (DIFFERENCE *TLINE *SFP)))
	     (INDENT-TO (SETQ TSP (DIFFERENCE *TLINE (PLUS *SFP *GAP))))
	     (PRINC '/;)
	PL   (COND ((NULL COMNT%) (SETQ LINEL *SFP)
				  (SETQ *SPACE% T)
				  (RETURN))
		   ((EQ (CAR COMNT%) '/ )
		    (COND ((NULL (LESSP (NEXTBLANK (CDR COMNT%)) TSP)))
			 ((LESSP CHRCT (NEXTBLANK (CDR COMNT%)))
			   (SETQ *SPACE% T)
			   (SETQ LINEL *SFP)
			   (RETURN))
			  (*SPACE%)
			  ((PRINC '/ )))
		    (SETQ *SPACE% T))
		   ((GREATERP CHRCT 0.) (PRINC (CAR COMNT%))
					(SETQ *SPACE% NIL))
		   ((SETQ LINEL *SFP) (SETQ *SPACE% T) (RETURN)))
	     (SETQ COMNT% (CDR COMNT%))
	     (GO PL)))


(DEFUN INDENT-TO (N) (AND (SETQ QWE CHRCT)
			  (LESSP N CHRCT)
			  (SETQ QWE CHRCT)
			  (PRINC (/	 (*DIF (LSH (*DIF LINEL N)
						    -3.)
					       (LSH (*DIF LINEL CHRCT)
						    -3.))))
			  (SETQ QWE CHRCT)
			  (PRINC (/  (*DIF CHRCT N)))))
(DEFUN COMNT%
       (P?)
       (PROG (C)
	BEG  (COND ((NULL L) (RETURN))
		   ((EQ (CAR L) 'RIGHT-COMMENT) (SETQ C (CADR L)))
		   ((EQ (CAAR L) 'RIGHT-COMMENT) (SETQ C (CADAR L))
						 (SETQ L (CDR L))))
	     (COND ((NULL (OR COMNT% C)))
		   ((AND COMNT% (NULL C)) (AND P? (PRIN50COM)))
		   ((AND (NULL COMNT%) C) (SETQ COMNT% C)
					  (AND P? (PRIN50COM)))
		   ((LESSP (LENGTH COMNT%)
			   (DIFFERENCE *TLINE (PLUS *SFP *GAP)))
		    (NCONC COMNT% (CONS (QUOTE / ) C))
		    (AND P? (PRIN50COM)))
		   (T (PRINALLCMNT)(OR P? (TURPRI)) (SETQ COMNT% C)))
	     (RETURN L)))



(DEFUN NEXTBLANK (L1) (PROG (NUM)
			    (SETQ NUM 2.)
		       BCK  (COND ((OR (EQ (CAR L1) '/ )
				       (NULL L1))
				   (RETURN NUM))
				  ((SETQ NUM (ADD1 NUM))
				   (SETQ L1 (CDR L1))
				   (GO BCK)))))

(DEFUN LISTIFY-COMMENT						       ;CONVERTS ; AND ;; COMMENTS TO EXPLODED LISTS
       NIL
       (PROG (DOUBLE-SEMI? CHAR CHST FOLLOW)
	     (SETQ CHAR (READCH))
	     (COND ((EQ CHAR '/;) (SETQ DOUBLE-SEMI? T))
		((EQ CHAR (ASCII 13.))(RETURN '(RIGHT-COMMENT ()))))
	     (SETQ CHST (CONS CHAR NIL))
	     (SETQ FOLLOW CHST)
	PL   (COND ((EQ (SETQ CHAR (READCH)) (ASCII 13.))
		    (RETURN (COND (DOUBLE-SEMI? (LIST 'LEFT-COMMENT
						      CHST))
				  ((LIST 'RIGHT-COMMENT CHST)))))
		   ((RPLACD FOLLOW (CONS CHAR NIL))
		    (SETQ FOLLOW (CDR FOLLOW))))
	     (GO PL)))


(COMMENT DO NOT GRIND THIS FILE WITH THE STANDARD GRIND)
(COMMENT ELSE /; COMMENTS WILL BE LOST)

(SETQ THVERSION (CADR (STATUS UREAD)))

(DECLARE (EVAL (READ)) (COMMENT SET UP THE READ MACROS)
	 (PRINT (LIST 'SETQ 'THVERSION (LIST 'QUOTE (CADR (STATUS UREAD))))))

(PROG2  (SSTATUS MACRO /: (FUNCTION (LAMBDA NIL NIL)) S)
	(SSTATUS MACRO
		  /;
		  (FUNCTION (LAMBDA NIL (DO Z (TYI) (TYI) (EQUAL Z 15)) NIL))
		  S))

(DECLARE  (*FEXPR THAPPLY
		 THGENAME 
		THSTATE
		THANTE
		THERASING
		THCONSE
		THDUMP
		THRESTRICT
		 THBKPT
		 THUNIQUE
		 THVSETQ
		 THMESSAGE
		 THDO
		 THGOAL
		 THERASE
		 THAND
		 THNV
		 THSUCCEED
		 THAMONG
		 THCOND
		 THSETQ
		 THASSERT
		 THASVAL
		 THERT
		 THGO
		 THFAIL
		 THOR
		 THFIND
		 THFINALIZE
		 THRETURN
		 THPROG
		 THFLUSH
		 THNOT
		 THV))

(DECLARE (MACROS T) (GENPREFIX TH))

(SETQ SYMBOLS T)

(COND	((ERRSET (AND PURE (SETQ LOW (PAGEBPORG)))))
	('(NOT PURIFIED)))

(DEFUN THSEMI
  ;FUNCTION FOR THE SEMI-COLON COMMENT FEATURE
       NIL
       (PROG NIL LP (COND ((EQ (READCH) (QUOTE /
)) (RETURN NIL))) (GO LP)))


(DEFUN THREAD
  ;FUNCTION FOR THE /$ READ MACRO
    ;EXPANDS ? TO (THV (READ))
    ;EXPANDS E TO (THEV (READ))
    ;EXPANDS _ TO (THNV (READ))
    ;EXPANDS A TO ASSERT
    ;EXPANDS G TO GOAL
    ;EXPANDS T TO THTBF THTRUE
    ;EXPANDS R TO THRESTRICT
    ;TREATS & - - & AS A COMMENT
       NIL
       (PROG (CHAR) (RETURN (COND ((EQ (SETQ CHAR (READCH)) (QUOTE ?))
				   (LIST (QUOTE THV) (READ)))
				  ((EQ CHAR (QUOTE E))
				   (LIST (QUOTE THEV) (READ)))
				  ((EQ CHAR (QUOTE _))
				   (LIST (QUOTE THNV) (READ)))
				  ((EQ CHAR (QUOTE &))
				   (PROG NIL
				    CHLP (COND ((EQ (QUOTE &) (READCH))
						(RETURN (QUOTE (COMMENT)))))
					 (GO CHLP)))
				  ((EQ CHAR (QUOTE T)) (QUOTE (THTBF THTRUE)))
				  ((EQ CHAR (QUOTE R)) (QUOTE THRESTRICT))
				  ((EQ CHAR (QUOTE G)) (QUOTE THGOAL))
				  ((EQ CHAR (QUOTE A)) (QUOTE THASSERT))
				  ((PRINT (QUOTE ILLEGAL-PREFIX))
				   (PRINC (QUOTE /$))
				   (PRINC CHAR)
				   (PRINC (READ))
				   (ERR NIL))))))

(DEFUN THPUSH MACRO (A)	;(THPUSH THTREE NEWINFO) CONSES NEWINFO ONTO THTREE
	(LIST (QUOTE SETQ)
	      (CADR A)
	      (LIST (QUOTE CONS) (CADDR A) (CADR A))))

(DEFUN EVLIS (X) 	;EVLIS EVALS ELEMENTS OF ARG THEN RETURNS ARG
	(MAPC (FUNCTION EVAL) X))

(DEFUN THPRINT2 (X) (PRINC (QUOTE / )) (PRINC X))

(DEFUN THPRINTC (X) (TERPRI) (PRINC X) (PRINC '/ ))


(DECLARE (SPECIAL THTT THFST THTTL THLAS THNF THWH THFSTP))

(DEFUN THADD
  ;THADD ADDS THEOREMS OR ASSERTION TO THE DATABASE
  ;INPUTS - THTT - NAME OF THM OR ACTUAL ASSERTION
  ;INPUT - THPL - PROPERTY LIST TO BE PLACED ON ASSERTION
  ;RETURNS NIL IF ALREADY THERE ELSE RETURNS THTT
       (THTT THPL)
       (PROG (THNF THWH THCK THLAS THTTL THT1 THFST THFSTP THFOO)
	     (SETQ THCK
		   (COND ((ATOM THTT)
			  (OR (SETQ THT1 (GET THTT (QUOTE THEOREM)))
			      (PROG2 (PRINT THTT) (THERT CANT
							 THASSERT/,
							 NO
							 THEOREM
							 -
							 THADD)))
			  (SETQ THWH (CAR THT1))
			  (SETQ THTTL THTT)
			  (AND THPL
			       (PROG NIL
				LP   (THPUTPROP THTT (CADR THPL) (CAR THPL))
				     (COND ((SETQ THPL (CDDR THPL)) (GO LP)))))
			  (CADDR THT1))
			 (T (SETQ THWH (QUOTE THASSERTION))
			    (SETQ THTTL (CONS THTT THPL))
			    THTT)))
	     (SETQ THNF 0)
	     (SETQ THLAS (LENGTH THCK))
	     (SETQ THFST T)
	THP1 (COND ((NULL THCK) (SETQ THCK THFOO)
				(SETQ THNF 0)
				(SETQ THFOO (SETQ THFST NIL))
				(SETQ THFSTP T)
				(GO THP1))
		   ((NULL (SETQ THT1 (THIP (CAR THCK)))) (RETURN NIL))
		   ((EQ THT1 (QUOTE THOK)))
		   ((SETQ THFOO (NCONC THFOO
				       (LIST (COND ((EQ THT1 (QUOTE THVRB))
						    (CAR THCK))))))
		    (SETQ THCK (CDR THCK))
		    (GO THP1)))
	     (SETQ THFST NIL)
	     (MAPC (FUNCTION THIP) (CDR THCK))
	     (SETQ THNF 0)
	     (MAPC (FUNCTION THIP) THFOO)
	     (RETURN THTTL)))

(DECLARE (UNSPECIAL THTT THFST THFSTP THTTL THLAS THNF THWH))

(DECLARE (SPECIAL THTREE THALIST THXX))

(DEFUN THAMONG FEXPR (THA)
	;EXAMPLE - (THAMONG $?X (THFIND ... ))
	;$E - (THAMONG $E$?X (THFIND ... )) CAUSES THE THVALUE OF 
	;$?X TO BE THE FIRST INPUT TO THAMONG.

	;THXX SET TO OLD BINDING CELL OF $?X (OR $E$?X)
       (COND 
	      ;IF $?X THUNASSIGNED, OLD VALUE AND LIST OF NEW 
	      ;VALUES PUSHED ONTO THTREE AND THAMONG FAILS TO THAMONGF.
	     ((EQ (CADR (SETQ THXX (THGAL (COND ((EQ (CAAR THA) (QUOTE THEV))
						 (THVAL (CADAR THA) THALIST))
						(T (CAR THA)))
					  THALIST)))
		  (QUOTE THUNASSIGNED))
	      (THPUSH THTREE
		      (LIST (QUOTE THAMONG) THXX (THVAL (CADR THA) THALIST)))
	      NIL)
	     ;IF $?X ASSIGNED, THAMONG REDUCES TO A MEMBERSHIP TEST
	     (T (MEMBER (CADR THXX) (THVAL (CADR THA) THALIST)))))

(DECLARE (UNSPECIAL THTREE THALIST THXX))

(DECLARE (SPECIAL THALIST THBRANCH THABRANCH THTREE THML))

(DEFUN THAMONGF ;(CAR THTREE) = (THAMONG OLDBINDINGCELL (NEW VALUES))
       NIL
       (COND	((CADDAR THTREE)				;LIST OF NEW VALUES NON NIL
		 (RPLACA (CDADAR THTREE) (CAADDR (CAR THTREE))) ;REPLACE OLD VALUE WITH NEW VALUE
		 (RPLACA (CDDAR THTREE) (CDADDR (CAR THTREE)))	;POP NEW VALUES
		 (SETQ THBRANCH THTREE)				;STORE AWAY TREE FOR POSSIBLE BACKTRACKING
		 (SETQ THABRANCH THALIST)			;STORE AWAY THALIST FOR POSSIBLE BACKTRACKING
		 (THPOPT)					;POP TREE
		 T)						;SUCCEED

		(T  ;NO NEW VALUES LEFT. RETURN X TO THUNASSIGNED, POP TREE AND CONTINUE FAILING.		
		 (RPLACA (CDADAR THTREE) (QUOTE THUNASSIGNED)) (THPOPT) NIL)))

(DECLARE (UNSPECIAL THALIST THBRANCH THABRANCH THTREE THML))

(DECLARE (SPECIAL THTREE THEXP))

(DEFUN THAND FEXPR (A) (OR (NOT A)
			   (PROG2 (THPUSH THTREE (LIST (QUOTE THAND) A NIL))
				  (SETQ THEXP (CAR A)))))

(DECLARE (UNSPECIAL THTREE THEXP))

(DEFUN THANDF NIL (THBRANCHUN) NIL)

(DECLARE (SPECIAL THTREE THVALUE THEXP))

(DEFUN THANDT
       NIL
       (COND ((CDADAR THTREE) (THBRANCH)
			      (SETQ THEXP (CADR (CADAR THTREE)))
			      (RPLACA (CDAR THTREE) (CDADAR THTREE)))
	     ((THPOPT)))
       THVALUE)

(DECLARE (UNSPECIAL THTREE THVALUE THEXP))

(DEFUN THANTE FEXPR (THX) ;DEFINES AND OPTIONALLY ASSERTS ANTECEDENT THEOREMS)
	(THDEF (QUOTE THANTE) THX))

(DECLARE (SPECIAL THTREE THTRACE THOLIST THALIST))

(DEFUN THAPPLY FEXPR (L) (THAPPLY1 (CAR L)
				   (GET (CAR L) (QUOTE THEOREM))
				   (CADR L)))

(DEFUN THAPPLY1
       (THM THB DAT)
       (COND ((AND (THBIND (CADR THB)) (THMATCH1 DAT (CADDR THB)))
	      (AND THTRACE (THTRACES (QUOTE THEOREM) THM))
	      (THPUSH THTREE (LIST (QUOTE THPROG) (CDDR THB) NIL (CDDR THB)))
	      (THPROGA)
	      T)
	     (T (SETQ THALIST THOLIST) (THPOPT) NIL)))

(DECLARE (UNSPECIAL THTREE THTRACE THOLIST THALIST))

(DECLARE (SPECIAL THALIST TYPE THX THTREE THEXP THTRACE THY1 THY))

(DEFUN THASS1
 (THA P)
 (PROG (THX THY1 THY TYPE PSEUDO)
       (AND (CDR THA) (EQ (CAADR THA) (QUOTE THPSEUDO)) (SETQ PSEUDO T))
       (OR (ATOM (SETQ THX (CAR THA)))
	   (THPURE (SETQ THX (THVARSUBST THX)))
	   PSEUDO
	   (PROG2 (PRINT THX) (THERT IMPURE ASSERTION OR ERASURE - THASS1)))
       (AND THTRACE
	    (NOT PSEUDO)
	    (THTRACES (COND (P (QUOTE THASSERT)) ((QUOTE THERASE))) THX))
       (SETQ THA (COND (PSEUDO (CDDR THA)) ((CDR THA))))
       (OR (SETQ THX
		 (COND (PSEUDO (LIST THX))
		       (P (THADD THX
				 (SETQ THY
				       (COND ((AND THA (EQ (CAAR THA)
							   (QUOTE THPROP)))
					      (PROG2 0
						     (EVAL (CADAR THA))
						     (SETQ THA (CDR THA))))))))
		       (T (THREMOVE THX))))
	   (RETURN NIL))
       (COND (P (SETQ TYPE (QUOTE THANTE))) ((SETQ TYPE (QUOTE THERASING))))
       (OR PSEUDO (THPUSH THTREE
			  (LIST (COND (P (QUOTE THASSERT)) ((QUOTE THERASE)))
				THX
				THY)))
       (SETQ THY (MAPCAN (FUNCTION THTAE) THA))
       (COND (THY (SETQ THEXP (CONS 'THDO THY))))
       (RETURN THX)))

(DECLARE (UNSPECIAL THALIST TYPE THX THTREE THEXP THTRACE THY1 THY))

(DEFUN THASSERT FEXPR (THA) (THASS1 THA T))

(DECLARE (SPECIAL THTREE))

(DEFUN THASSERTF
       NIL
       (THREMOVE (COND ((ATOM (CADAR THTREE)) (CADAR THTREE))
		       (T (CAADAR THTREE))))
       (THPOPT)
       NIL)

(DECLARE (UNSPECIAL THTREE))

(DECLARE (SPECIAL THTREE))

(DEFUN THASSERTT NIL (PROG2 0 (CADAR THTREE) (THPOPT)))

(DECLARE (UNSPECIAL THTREE))

(DECLARE (SPECIAL THALIST))

(DEFUN THASVAL
       FEXPR
       (X)
       ((LAMBDA (X) (AND X (NOT (EQ (CADR X) (QUOTE THUNASSIGNED)))))
	(THGAL (CAR X) THALIST)))

(DECLARE (UNSPECIAL THALIST) (SPECIAL THPC))

(DEFUN THBA (TH1 TH2) (PROG (THP)
			    (SETQ THP TH2)
		       THP1 (AND (EQ (COND (THPC (CADR THP)) (T (CAADR THP)))
				     TH1)
				 (RETURN THP))
			    (OR (CDR (SETQ THP (CDR THP))) (RETURN NIL))
			    (GO THP1)))

(DEFUN THBAP
       (TH1 TH2)
       (PROG (THP)
	     (SETQ THP TH2)
	THP1 (AND (EQUAL (COND (THPC (CADR THP)) (T (CAADR THP))) TH1)
		  (RETURN THP))
	     (OR (CDR (SETQ THP (CDR THP))) (RETURN NIL))
	     (GO THP1)))

(DECLARE (UNSPECIAL THPC) (SPECIAL THTREE THOLIST THALIST))

(DEFUN THBIND
       (A)
       (SETQ THOLIST THALIST)
       (OR (NULL A)
	   (PROG NIL
	    GO	 (COND ((NULL A)
			(THPUSH THTREE (LIST (QUOTE THREMBIND) THOLIST))
			(RETURN T)))
		 (THPUSH THALIST (COND ((ATOM (CAR A))
					(LIST (CAR A) (QUOTE THUNASSIGNED)))
				       ((EQ (CAAR A) (QUOTE THRESTRICT))
					(NCONC (THBI1 (CADAR A)) (CDDAR A)))
				       (T (LIST (CAAR A) (EVAL (CADAR A))))))
		 (SETQ A (CDR A))
		 (GO GO))))

(DECLARE (UNSPECIAL THOLIST THTREE THALIST))

(DEFUN THBI1 (X) (COND ((ATOM X) (LIST X (QUOTE THUNASSIGNED)))
		       (T (LIST (CAR X) (EVAL (CADR X))))))

(DECLARE (SPECIAL THTRACE THVALUE))

(DEFUN THBKPT FEXPR (L) (OR (AND THTRACE (THTRACES (QUOTE THBKPT) L)) THVALUE))

(DECLARE (UNSPECIAL THTRACE THVALUE))

(DECLARE (SPECIAL THBRANCH THABRANCH THTREE))

(DEFUN THBRANCH
       NIL
       (COND ((NOT (CDADAR THTREE)))
	     ((EQ THBRANCH THTREE) (SETQ THBRANCH NIL))
	     ((RPLACA (CDDAR THTREE)
		      (CONS (LIST THBRANCH THABRANCH (CADAR THTREE))
			    (CADDAR THTREE)))
	      (SETQ THBRANCH NIL))))
(DECLARE (UNSPECIAL THBRANCH THABRANCH THTREE))

(DECLARE (SPECIAL THTREE THALIST))

(DEFUN THBRANCHUN NIL (PROG (X) (RETURN (COND ((SETQ X (CADDAR THTREE))
					       (RPLACA (CDAR THTREE) (CADDAR X))
					       (RPLACA (CDDAR THTREE) (CDR X))
					       (SETQ THALIST (CADAR X))
					       (SETQ THTREE (CAAR X))
					       T)
					      (T (THPOPT) NIL)))))

(DECLARE (UNSPECIAL THTREE THALIST))

(DECLARE (SPECIAL THTREE THEXP))

(DEFUN THCOND
       FEXPR
       (THA)
       (THPUSH THTREE (LIST (QUOTE THCOND) THA NIL))
       (SETQ THEXP (CAAR THA)))

(DECLARE (UNSPECIAL THTREE THEXP))

(DEFUN THCONDF NIL (THOR2 NIL))

(DECLARE (SPECIAL THTREE THVALUE))

(DEFUN THCONDT
       NIL
       (RPLACA (CAR THTREE) (QUOTE THAND))
       (RPLACA (CDAR THTREE) (CAADAR THTREE))
       THVALUE)

(DECLARE (UNSPECIAL THTREE THVALUE))

(COMMENT THCONSE DEFINES AND OPTIONALLY ASSERTS CONSEQUENT THEOREMS)

(DEFUN THCONSE FEXPR (THX) (THDEF (QUOTE THCONSE) THX))

(DEFUN THDATA NIL (PROG (X)
		   GO	(TERPRI)
			(COND ((NULL (SETQ X (READ NIL))) (RETURN T))
			      ((PRINT (THADD (CAR X) (CDR X)))))
			(GO GO)))

(COMMENT THDEF DEFINES AND OPTIONALLY ASSERTS THEOREMS)
(DEFUN THDEF
 (THMTYPE THX)
 (PROG (THNOASSERT? THMNAME THMBODY)
       
       (COND ((NOT (ATOM (CAR THX)))
	      (SETQ THMBODY THX)
	      (COND ((EQ THMTYPE (QUOTE THCONSE))
		     (SETQ THMNAME (THGENAME TC-G)))
		    ((EQ THMTYPE (QUOTE THANTE)) (SETQ THMNAME (THGENAME TA-G)))
		    ((EQ THMTYPE (QUOTE THERASING))
		     (SETQ THMNAME (THGENAME TE-G)))))
	     ((SETQ THMNAME (CAR THX)) (SETQ THMBODY (CDR THX))))
	
	;THNOOASSERT FEATURE
	(COND	((EQ (CAR THMBODY) (QUOTE THNOASSERT))
		 (SETQ THNOASSERT? T)
		 (SETQ THMBODY (CDR THMBODY))))

       (THPUTPROP THMNAME (CONS THMTYPE THMBODY) (QUOTE THEOREM))
       (COND (THNOASSERT? (THPRINTC (LIST THMNAME
					  (QUOTE DEFINED/ BUT/ NOT/ ASSERTED)))
			  (RETURN T))
	     ((THASS1 (LIST THMNAME) T)
	      (THPRINTC (LIST THMNAME (QUOTE DEFINED/ AND/ ASSERTED)))
	      (RETURN T))
	     ((THPRINTC (LIST (QUOTE FAILURE/ -)
			      THMNAME
			      (QUOTE ALREADY/ ASSERTED)))
	      (RETURN NIL)))))

(DECLARE (SPECIAL THTREE THEXP))

(DEFUN THDO FEXPR (A) (OR (NOT A)
			  (PROG2 (THPUSH THTREE (LIST (QUOTE THDO) A NIL NIL))
				 (SETQ THEXP (CAR A)))))

(DECLARE (UNSPECIAL THTREE THEXP))

(DECLARE (SPECIAL THTREE THEXP THBRANCH THABRANCH))

(DEFUN THDO1
       NIL
       (RPLACA (CDAR THTREE) (CDADAR THTREE))
       (SETQ THEXP (CAADAR THTREE))
       (COND (THBRANCH (RPLACA (CDDAR THTREE) (CONS THBRANCH (CADDAR THTREE)))
		       (SETQ THBRANCH NIL)
		       (RPLACA (CDDDAR THTREE)
			       (CONS THABRANCH (CAR (CDDDAR THTREE)))))))

(DECLARE (UNSPECIAL THTREE THEXP THBRANCH THABRANCH))

(DECLARE (SPECIAL THTREE))

(DEFUN THDOB
       NIL
       (COND ((NULL (CDADAR THTREE)) (RPLACA (CAR THTREE) (QUOTE THUNDO)) T)
	     ((THDO1))))

(DECLARE (UNSPECIAL THTREE))
(DEFUN THDUMP FEXPR (THFILE)
	(APPLY 'UWRITE (COND (THFILE (CDDR THFILE))))
	(IOC R)
	(THSTATE)
	(APPLY 'UFILE THFILE))

(DEFUN THERASE FEXPR (THA) (THASS1 THA NIL))

(DECLARE (SPECIAL THTREE))

(DEFUN THERASEF
       NIL
       (THADD (COND ((ATOM (CADAR THTREE)) (CADAR THTREE)) (T (CAADAR THTREE)))
	      (COND ((ATOM (CADAR THTREE)) NIL) (T (CDADAR THTREE))))
       (THPOPT)
       NIL)

(DECLARE (UNSPECIAL THTREE))

(DECLARE (SPECIAL THTREE))

(DEFUN THERASET NIL (PROG2 0 (CADAR THTREE) (THPOPT)))

(DECLARE (UNSPECIAL THTREE))

(COMMENT THERASING DEFINES AND OPTIONALLY ASSERTS ERASING THEOREMS)

(DEFUN THERASING FEXPR (THX) (THDEF (QUOTE THERASING) THX))
(DECLARE (SPECIAL THINF THTREE THMESSAGE))

(DEFUN THFAIL
       FEXPR
       (THA)
       (AND THA
	    (PROG (THTREE1 THA1 THX)
		  (SETQ THTREE1 THTREE)
		  (SETQ THA1
			(COND ((EQ (CAR THA) (QUOTE THEOREM)) (QUOTE THPROG))
			      ((EQ (CAR THA) (QUOTE THTAG)) (QUOTE THPROG))
			      ((EQ (CAR THA) (QUOTE THINF)) (SETQ THINF T)
							    (RETURN NIL))
			      ((EQ (CAR THA) (QUOTE THMESSAGE))
			       (SETQ THMESSAGE (CADR THA))
			       (RETURN NIL))
			      (T (CAR THA))))
	     LP1  (COND ((NULL THTREE1) (PRINT THA)
					(RETURN (THERT NOT FOUND - THFAIL)))
			((EQ (CAAR THTREE1) THA1) (GO ELP1)))
	     ALP1 (SETQ THTREE1 (CDR THTREE1))
		  (GO LP1)
	     ELP1 (COND ((EQ (CAR THA) (QUOTE THTAG))
			 (COND ((MEMQ (CADR THA) (CADDDR (CAR THTREE1)))
				(GO TAGS))
			       (T (GO ALP1)))))
		  (RPLACD THTREE1 (CONS (LIST (QUOTE THFAIL?)
					      T
					      (AND (CDR THA) (CADR THA)))
					(CDR THTREE1)))
		  (SETQ THMESSAGE (QUOTE THFAIL))
		  (RETURN NIL)
	     TAGS (SETQ THX (CADDAR THTREE1))
	     LP2  (COND ((NULL (CAR THX)) (GO ALP1))
			((EQ (CAADDR (CAR THX)) (CADR THA))
			 (RPLACA (CAR THX)
				 (CONS (LIST (QUOTE THFAIL?)
					     T
					     (AND (CDDR THA) (CADDR THA)))
				       (CAAR THX)))
			 (SETQ THMESSAGE (QUOTE THFAIL))
			 (RETURN NIL)))
		  (SETQ THX (CDR THX))
		  (GO LP2))))

(DECLARE (UNSPECIAL THINF THTREE THMESSAGE))

(DECLARE (SPECIAL THTREE THVALUE))

(DEFUN THFAIL? (PRD ACT) (THPUSH THTREE (LIST (QUOTE THFAIL?) PRD ACT)) THVALUE)

(DECLARE (UNSPECIAL THTREE THVALUE))
(DECLARE (SPECIAL THTREE THMESSAGE))

(DEFUN THFAIL?F
       NIL
       (COND ((EVAL (CADAR THTREE))
	      (PROG2 (SETQ THMESSAGE NIL) (EVAL (CADDAR THTREE)) (THPOPT)))
	     (T (THPOPT) NIL)))

(DECLARE (UNSPECIAL THTREE THMESSAGE))

(DECLARE (SPECIAL THVALUE))

(DEFUN THFAIL?T NIL (THPOPT) THVALUE)

(DECLARE (UNSPECIAL THVALUE) (SPECIAL THTREE))

(DEFUN THFINALIZE
       FEXPR
       (THA)
       (PROG (THTREE1 THT THX)
	     (COND ((NULL THA) (THERT BAD CALL - THFINALIZE))
		   ((EQ (CAR THA) (QUOTE THTAG)) (SETQ THT (CADR THA)))
		   ((EQ (CAR THA) (QUOTE THEOREM))
		    (SETQ THA (LIST (QUOTE THPROG)))))
	     (SETQ THTREE (SETQ THTREE1 (CONS NIL THTREE)))
	PLUP (SETQ THX (CADR THTREE1))
	     (COND ((NULL (CDR THTREE1)) (PRINT THA)
					 (THERT OVERPOP - THFINALIZE))
		   ((AND THT (EQ (CAR THX) (QUOTE THPROG)) (MEMQ THT
								 (CADDDR THX)))
		    (GO RTLEV))
		   ((OR (EQ (CAR THX) (QUOTE THPROG))
			(EQ (CAR THX) (QUOTE THAND)))
		    (RPLACA (CDDR THX) NIL)
		    (SETQ THTREE1 (CDR THTREE1)))
		   ((EQ (CAR THX) (QUOTE THREMBIND))
		    (SETQ THTREE1 (CDR THTREE1)))
		   ((RPLACD THTREE1 (CDDR THTREE1))))
	     (COND ((EQ (CAR THX) (CAR THA)) (GO DONE)))
	     (GO PLUP)
	RTLEV(SETQ THX (CDDR THX))
	LEVLP(COND ((NULL (CAR THX)) (SETQ THTREE1 (CDR THTREE1)) (GO PLUP))
		   ((EQ (CAADDR (CAAR THX)) THT) (GO DONE)))
	     (RPLACA THX (CDAR THX))
	     (GO LEVLP)
	DONE (SETQ THTREE (CDR THTREE))
	     (RETURN T)))

(DECLARE (UNSPECIAL THTREE))
(DECLARE (SPECIAL THTREE))

(DEFUN THFIND
       FEXPR
       (THA)
       (THBIND (CADDR THA))
       (THPUSH THTREE
	       (LIST (QUOTE THFIND)
		     (COND ((EQ (CAR THA) (QUOTE ALL)) (QUOTE (1 NIL NIL)))
			   ((ATOM (CAR THA)) (LIST (CAR THA) (CAR THA) T))
			   ((CAR THA)))
		     (CONS 0 NIL)
		     (CADR THA)))
       (THPUSH THTREE (LIST (QUOTE THPROG) (CDDR THA) NIL (CDDR THA)))
       (THPROGA))

(DECLARE (UNSPECIAL THTREE))

(DECLARE (SPECIAL THTREE THBRANCH THXX))

(DEFUN THFINDF
       NIL
       (SETQ THBRANCH NIL)
       (COND ((LESSP (CAADR (SETQ THXX (CDAR THTREE))) (CAAR THXX)) (THPOPT)
								    NIL)
	     (T (THPOPT) (CDADR THXX))))

(DECLARE (UNSPECIAL THTREE THBRANCH THXX))

(DECLARE (SPECIAL THTREE THALIST THBRANCH THABRANCH))

(DEFUN THFINDT
 NIL
 (PROG (THX THY THZ THCDAR)
       (AND (MEMBER (SETQ THX (COND ((THVAR (SETQ THZ
						  (CADDR (SETQ THCDAR
							       (CDAR THTREE)))))
				     (THVARS2 THZ))
				    ((THVARSUBST THZ))))
		    (CADR THCDAR))
	    (GO GO))
       (RPLACD (CADR THCDAR) (CONS THX (CDADR THCDAR)))
       (AND (EQ (SETQ THY (ADD1 (CAADR THCDAR))) (CADAR THCDAR))
	    (RETURN (PROG2 (SETQ THBRANCH NIL)
			   (AND (CADDAR THCDAR) (CDADR THCDAR))
			   (THPOPT))))
       (RPLACA (CADR THCDAR) THY)
  GO   (SETQ THTREE THBRANCH)
       (SETQ THALIST THABRANCH)
       (SETQ THBRANCH NIL)
       (RETURN NIL)))

(DECLARE (UNSPECIAL THTREE THALIST THBRANCH THABRANCH))
(DECLARE (SPECIAL B))

(DEFUN THFLUSH
 ;(THFLUSH) FLUSHES ALL ASSERTIONS AND THEOREMS
 ;INPUT = SEQUENCE OF INDICATORS
 ;DEFAULT = (THASSERTION THCONSE THANTE THERASING)
 ;EFFECT = FLUSHES THE PROPERTIES OF THESE INDICATORS FROM ALL ATOMS
 FEXPR
 (A)
 (MAPC
  (FUNCTION
   (LAMBDA (B)
	   (MAPC (FUNCTION (LAMBDA (C)
				   (MAPC (FUNCTION (LAMBDA (D) (REMPROP D B)))
					 C)))
		 (MAKOBLIST NIL))))
  (COND (A)
	('(THASSERTION THCONSE THANTE THERASING)))))

(DECLARE (UNSPECIAL B))

(DECLARE (SPECIAL THXX))

(DEFUN THGAL ;(THGAL $?X THALIST) RETURNS THE BINDING CELL (X -) OF X ON THALIST
       (X Y)
       (SETQ THXX X)
       (SASSQ (CADR X)
	      Y
	      (FUNCTION (LAMBDA NIL (PRINT THXX) (THERT THUNBOUND THGAL)))))

(DECLARE (UNSPECIAL THXX))

(DECLARE (SPECIAL THGENAME))

(DEFUN THGENAME FEXPR ;GENERATES UNIQUE NAME WITH ARG AS PREFIX
	(X)
	(READLIST (NCONC (EXPLODE (CAR X))
		         (EXPLODE (SETQ THGENAME (ADD1 THGENAME))))))

(DECLARE (UNSPECIAL THGENAME))

(DEFUN THGO FEXPR (X) (APPLY (QUOTE THSUCCEED) (CONS (QUOTE THTAG) X)))

(DECLARE (SPECIAL THTREE THTRACE THZ1 THZ THY1 THY THA2 THV))

(DEFUN THGOAL
       FEXPR
       (THA)	;THA = (PATTERN RECOMMENDATION)
		;PATTERN IS EITHER EXPLICIT, THE VALUE OF A PLANNER VARIABLE OR THVAL OF $E...
       (PROG (THY THY1 THZ THZ1 THA1 THA2 THV)
	     (SETQ THV (QUOTE (THV)))
	     (SETQ THA2 (THVARSUBST (CAR THA)))				;THA2 = INSTANTIATED PATTERN
	     (SETQ THA1 (CDR THA))					;THA1 = RECOMMENDATIONS

	     ;SHOULD DATA BASE BE SEARCHED
	     (COND ((OR (NULL THA1)					;TRYED IF NO RECS
			(AND (NOT (AND (EQ (CAAR THA1) (QUOTE THNODB))	;TRIED IF REC NOT THNODB OR (THDBF PRED)
				       (PROG2 (SETQ THA1 (CDR THA1)) T)))
			     (NOT (EQ (CAAR THA1) (QUOTE THDBF)))))
		    (SETQ THA1
			  (CONS (LIST (QUOTE THDBF) (QUOTE THTRUE)) THA1))))
	     (SETQ THA1 (MAPCAR (FUNCTION THTRY) THA1))			;THMS AND ASSERTIONS SATISFYING RECS APPENDED TO RECS
	     (AND THTRACE (THTRACES (QUOTE THGOAL) THA2))
	     (THPUSH THTREE (LIST (QUOTE THGOAL) THA2 THA1)) 		;(THGOAL PATTERN MATCHES)
	     (RETURN NIL)))						;FAILS TO THGOALF


(DECLARE (UNSPECIAL THTREE THTRACE THZ1 THZ THY1 THY THA2 THV))

(DEFUN THGOALF NIL (COND ((THTRY1)) ((THPOPT) NIL)))

(DECLARE (SPECIAL THTREE THVALUE))

(DEFUN THGOALT NIL (PROG2 0
			  (COND ((EQ THVALUE (QUOTE THNOVAL))
				 (THVARSUBST (CADAR THTREE)))
				(THVALUE))
			  (THPOPT)))

(DECLARE (UNSPECIAL THTREE THVALUE))

(DECLARE (SPECIAL THTT THFSTP THFST THTTL THLAS THNF THWH))

(DEFUN THIP
       (THI)
       (PROG (THT1 THT3 THSV THT2 THI1)
	     (SETQ THNF (ADD1 THNF))
	     (COND ((AND (ATOM THI)
			 (NOT (EQ THI (QUOTE ?)))
			 (NOT (NUMBERP THI)))
		    (SETQ THI1 THI))
		   ((OR (EQ THI (QUOTE ?)) (MEMQ (CAR THI) (QUOTE (THV THNV))))
		    (COND (THFST (RETURN (QUOTE THVRB)))
			  ((SETQ THI1 (QUOTE THVRB)))))
		   ((RETURN (QUOTE THVRB))))
	     (COND ((NOT (SETQ THT1 (GET THI1 THWH)))
		    (PUTPROP THI1
			     (LIST NIL (LIST THNF (LIST THLAS 1 THTTL)))
			     THWH))
		   ((EQ THT1 (QUOTE THNOHASH)) (RETURN (QUOTE THBQF)))
		   ((NOT (SETQ THT2 (ASSQ THNF (CDR THT1))))
		    (NCONC THT1 (LIST (LIST THNF (LIST THLAS 1 THTTL)))))
		   ((NOT (SETQ THT3 (ASSQ THLAS (CDR THT2))))
		    (NCONC THT2 (LIST (LIST THLAS 1 THTTL))))
		   ((AND (OR THFST THFSTP) (COND ((EQ THWH (QUOTE THASSERTION))
						  (ASSOC THTT (CDDR THT3)))
						 (T (MEMQ THTT (CDDR THT3)))))
		    (RETURN NIL))
		   ((SETQ THSV (CDDR THT3))
		    (RPLACA (CDR THT3) (ADD1 (CADR THT3)))
		    (RPLACD (CDR THT3) (NCONC (LIST THTTL) THSV))))
	     (RETURN (QUOTE THOK))))

(DECLARE (UNSPECIAL THTT THFST THFSTP THTTL THLAS THNF THWH))

(DECLARE (SPECIAL THOLIST THALIST THX THY))
(DEFUN THMATCH2
 (THX THY)
 (AND (EQ (CAR THX) (QUOTE THEV)) (SETQ THX (THVAL (CADR THX) THOLIST)))
 (AND (EQ (CAR THY) (QUOTE THEV)) (SETQ THY (THVAL (CADR THY) THALIST)))
 (COND ((EQ THX (QUOTE ?)))
       ((EQ THY (QUOTE ?)))
       ((OR (MEMQ (CAR THX) (QUOTE (THV THNV THRESTRICT)))
	    (MEMQ (CAR THY) (QUOTE (THV THNV THRESTRICT))))
	((LAMBDA (XPAIR YPAIR)
		 (COND ((AND XPAIR
			     (OR (EQ (CAR THX) (QUOTE THNV))
				 (AND (EQ (CAR THX) (QUOTE THV))
				      (EQ (CADR XPAIR) (QUOTE THUNASSIGNED))))
			     (THCHECK (CDDR XPAIR)
				      (COND (YPAIR (CADR YPAIR)) (T THY))))
			(COND (YPAIR (THRPLACAS (CDR XPAIR) (CADR YPAIR))
				     (AND (CDDR YPAIR)
					  (THRPLACDS (CDR XPAIR)
						     (THUNION (CDDR XPAIR)
							      (CDDR YPAIR))))
				     (THRPLACDS YPAIR (CDR XPAIR)))
			      (T (THRPLACAS (CDR XPAIR) THY))))
		       ((AND YPAIR
			     (OR (EQ (CAR THY) (QUOTE THNV))
				 (AND (EQ (CAR THY) (QUOTE THV))
				      (EQ (CADR YPAIR) (QUOTE THUNASSIGNED))))
			     (THCHECK (CDDR YPAIR)
				      (COND (XPAIR (CADR XPAIR)) (T THX))))
			(COND (XPAIR (THRPLACAS (CDR YPAIR) (CADR XPAIR)))
			      (T (THRPLACAS (CDR YPAIR) THX))))
		       ((AND XPAIR (EQUAL (CADR XPAIR)
					  (COND (YPAIR (CADR YPAIR)) (T THY)))))
		       ((AND YPAIR (EQUAL (CADR YPAIR) THX)))
		       (T (ERR NIL))))
	 (COND ((THVAR THX) (THGAL THX THOLIST))
	       ((EQ (CAR THX) (QUOTE THRESTRICT))
		(COND ((EQ (CADR THX) (QUOTE ?))
		       (PROG2 0
			      (CONS (QUOTE ?) (CONS (QUOTE THUNASSIGNED)
						    (APPEND (CDDR THX) NIL)))
			      (SETQ THX (QUOTE (THNV ?)))))
		      (T ((LAMBDA (U)
				  (THRPLACDS (CDR U)
					     (THUNION (CDDR U) (CDDR THX)))
				  (SETQ THX (CADR THX))
				  U)
			  (THGAL (CADR THX) THOLIST))))))
	 (COND ((THVAR THY) (THGAL THY THALIST))
	       ((EQ (CAR THY) (QUOTE THRESTRICT))
		(COND ((EQ (CADR THY) (QUOTE ?))
		       (PROG2 0
			      (CONS (QUOTE ?) (CONS (QUOTE THUNASSIGNED)
						    (APPEND (CDDR THY) NIL)))
			      (SETQ THY (QUOTE (THNV ?)))))
		      (T ((LAMBDA (U)
				  (THRPLACDS (CDR U)
					     (THUNION (CDDR U) (CDDR THY)))
				  (SETQ THY (CADR THY))
				  U)
			  (THGAL (CADR THY) THALIST))))))))
       ((EQUAL THX THY))
       (T (ERR NIL))))

(DEFUN THRESTRICT FEXPR (L) (NCONC (THGAL (CAR L) THALIST)
				   (APPEND (CDR L) NIL)))

(DECLARE (UNSPECIAL THOLIST THALIST THX THY) (SPECIAL THX THPRD))

(DEFUN THCHECK
       (THPRD THX)
       (OR (NULL THPRD)
	   (EQ THX (QUOTE THUNASSIGNED))
	   (ERRSET (MAPC (FUNCTION (LAMBDA (THY) (OR (THY THX) (ERR NIL))))
			 THPRD))))

(DECLARE (UNSPECIAL THX THPRD) (SPECIAL THY THX THTREE THOLIST THML))

(DECLARE (SPECIAL L2))

(DEFUN THUNION
       (L1 L2)
       (MAPC (FUNCTION (LAMBDA (THX) (COND ((MEMBER THX L2))
					   (T (SETQ L2 (CONS THX L2))))))
	     L1)
       L2)

(DECLARE (UNSPECIAL L2))

(DECLARE (SPECIAL THX THALIST THOLIST))

(DEFUN THMATCH THX ((LAMBDA (THOLIST THALIST) (THMATCH1 (ARG 1) (ARG 2)))
		    (COND ((GREATERP THX 2) (ARG 3)) (T THALIST))
		    (COND ((GREATERP THX 3) (ARG 4)) (T THALIST))))

(DEFUN THMATCH1
       (THX THY)
       (PROG (THML) (COND ((AND (EQ (LENGTH (COND ((EQ (CAR THX) (QUOTE THEV))
						   (SETQ THX (THVAL (CADR THX)
								    THOLIST)))
						  (THX)))
				    (LENGTH THY))
				(ERRSET (MAPC (FUNCTION THMATCH2) THX THY)))
			   (AND THML (THPUSH THTREE (LIST (QUOTE THMUNG) THML)))
			   (RETURN T))
			  (T (EVLIS THML) (RETURN NIL)))))

(DECLARE (UNSPECIAL THY THX THTREE THOLIST THML))

(COMMENT RETURNS THE ASSERTIONS THAT MATCH ITS ARG)

(DEFUN THMATCHDB (THV) (THMATCHLIST THV (QUOTE THASSERTION)))

(DECLARE (SPECIAL THNF THWH THALIST))
(DEFUN THMATCHLIST
       (THTB THWH)
       (PROG (THB1 THB2 THL THNF THAL THA1 THA2 THRN THL1 THL2 THRVC)
	     (SETQ THL 377777777777)
	     (SETQ THNF 0)
	     (SETQ THAL (LENGTH THTB))
	     (SETQ THB1 THTB)
	THP1 (OR THB1 (RETURN (COND (THL2 (APPEND THL1 THL2)) (THL1))))
	     (SETQ THNF (ADD1 THNF))
	     (SETQ THB2 (CAR THB1))
	     (SETQ THB1 (CDR THB1))
	THP3 (COND ((OR (NULL (ATOM THB2)) (NUMBERP THB2) (EQ THB2 (QUOTE ?)))
		    (GO THP1))
		   ((NOT (SETQ THA1 (GET THB2 THWH))) (SETQ THA1 (QUOTE (0 0))))
		   ((EQ THA1 (QUOTE THNOHASH)) (GO THP1))
		   ((NOT (SETQ THA1 (ASSQ THNF (CDR THA1))))
		    (SETQ THA1 (QUOTE (0 0))))
		   ((NOT (SETQ THA1 (ASSQ THAL (CDR THA1))))
		    (SETQ THA1 (QUOTE (0 0)))))
	     (SETQ THRN (CADR THA1))
	     (SETQ THA1 (CDDR THA1))
	     (AND (EQ THWH (QUOTE THASSERTION)) (GO THP2))
	     (COND ((NOT (SETQ THA2 (GET (QUOTE THVRB) THWH)))
		    (SETQ THA2 (QUOTE (0 0))))
		   ((NOT (SETQ THA2 (ASSQ THNF (CDR THA2))))
		    (SETQ THA2 (QUOTE (0 0))))
		   ((NOT (SETQ THA2 (ASSQ THAL (CDR THA2))))
		    (SETQ THA2 (QUOTE (0 0)))))
	     (SETQ THRVC (CADR THA2))
	     (SETQ THA2 (CDDR THA2))
	     (AND (GREATERP (PLUS THRVC THRN) THL) (GO THP1))
	     (SETQ THL (PLUS THRVC THRN))
	     (SETQ THL1 THA1)
	     (SETQ THL2 THA2)
	     (GO THP1)
	THP2 (COND ((EQ THRN 0) (RETURN NIL))
		   ((GREATERP THL THRN) (SETQ THL1 THA1) (SETQ THL THRN)))
	     (GO THP1)))

(DECLARE (UNSPECIAL THNF THWH THALIST))

(COMMENT RETURNS THE THEOREMS THAT MATCH ITS ARG)

(DEFUN THMATCHTB (THU THV) (THMATCHLIST THU THV))

(DECLARE (SPECIAL THTREE THVALUE))

(DEFUN THMESSAGE
       FEXPR
       (THA)
       (THPUSH THTREE (LIST (QUOTE THMESSAGE) (THVARSUBST (CAR THA))))
       THVALUE)

(DECLARE (UNSPECIAL THTREE THVALUE))

(DECLARE (SPECIAL THALIST THOLIST THTREE THMESSAGE))
(DEFUN THMESSAGEF
       NIL
       (PROG (BOD)
	     (SETQ BOD (CAR THTREE))
	     (THPOPT)
	     (COND ((AND (THBIND (CADR BOD)) (THMATCH1 (CADDR BOD) THMESSAGE))
		    (THPUSH THTREE
			    (LIST (QUOTE THPROG) (CDDR BOD) NIL (CDDR BOD)))
		    (SETQ THMESSAGE NIL)
		    (RETURN (THPROGA)))
		   (T (SETQ THALIST THOLIST) (THPOPT)))
	     (RETURN NIL)))

(DECLARE (UNSPECIAL THALIST THOLIST THTREE THMESSAGE))

(DECLARE (SPECIAL THVALUE))

(DEFUN THMESSAGET NIL (THPOPT) THVALUE)

(DECLARE (UNSPECIAL THVALUE))

(DECLARE (SPECIAL THTREE))

(DEFUN THMUNGF NIL (EVLIS (CADAR THTREE)) (THPOPT) NIL)

(DECLARE (UNSPECIAL THTREE))

(DECLARE (SPECIAL THVALUE))

(DEFUN THMUNGT NIL (THPOPT) THVALUE)

(DECLARE (UNSPECIAL THVALUE))

(DEFUN THNOFAIL (THX) (COND (THX (DEFPROP THPROG THPROGT THFAIL))
			    (T (DEFPROP THPROG THPROGF THFAIL))))

(DECLARE (SPECIAL THA))

(DEFUN THNOHASH
       FEXPR
       (THA)
       (MAPC (FUNCTION (LAMBDA (X) (PUTPROP (CAR THA) (QUOTE THNOHASH) X)))
	     (OR (CDR THA) (QUOTE (THASSERTION THCONSE THANTE THERASING)))))

(DECLARE (UNSPECIAL THA))

(DECLARE (SPECIAL THEXP))

(DEFUN THNOT FEXPR (THA) (SETQ THEXP
			       (LIST (QUOTE THCOND)
				     (LIST (CAR THA) (QUOTE (THFAIL THAND)))
				     (QUOTE ((THSUCCEED))))))

(DECLARE (UNSPECIAL THEXP))

(DEFUN THNV FEXPR (X) (THV1 (CAR X)))

(DECLARE (SPECIAL THTREE THEXP))
(DEFUN THOR FEXPR (THA) (AND THA
			     (THPUSH THTREE (LIST (QUOTE THOR) THA))
			     (SETQ THEXP (CAR THA))))

(DECLARE (UNSPECIAL THTREE THEXP))

(DECLARE (SPECIAL THTREE THEXP))

(DEFUN THOR2 (P) (COND ((AND (CADAR THTREE) (CDADAR THTREE))
			(RPLACA (CDAR THTREE) (CDADAR THTREE))
			(SETQ THEXP
			      (COND (P (PROG2 0
					      (CAADAR THTREE)
					      (OR (CADAR THTREE) (THPOPT))))
				    ((CAR (CAADAR THTREE))))))
		       ((THPOPT) NIL)))

(DECLARE (UNSPECIAL THTREE THEXP))

(DEFUN THORF NIL (THOR2 T))

(DECLARE (SPECIAL THVALUE))

(DEFUN THORT NIL (THPOPT) THVALUE)

(DECLARE (UNSPECIAL THVALUE))

(DECLARE (SPECIAL THTREE))

(DEFUN THPOPT NIL (SETQ THTREE (CDR THTREE)))

(DECLARE (UNSPECIAL THTREE))

(DECLARE (SPECIAL THTREE))

(DEFUN THPROG
       FEXPR
       (THA)
       (THBIND (CAR THA))
       (THPUSH THTREE (LIST (QUOTE THPROG) THA NIL THA))
       (THPROGA))

(DECLARE (UNSPECIAL THTREE))

(DECLARE (SPECIAL THEXP THVALUE THTREE))

(DEFUN THPROGA
       NIL
       ((LAMBDA (X)
		(COND ((NULL (CDAR X)) (THPOPT) (QUOTE THNOVAL))
		      ((ATOM (CADAR X))
		       (SETQ THEXP (LIST (QUOTE THTAG) (CADAR X)))
		       (RPLACA X (CDAR X))
		       THVALUE)
		      (T (SETQ THEXP (CADAR X)) (RPLACA X (CDAR X)) THVALUE)))
	(CDAR THTREE)))

(DECLARE (UNSPECIAL THEXP THVALUE THTREE))

(DEFUN THPROGF NIL (THBRANCHUN) NIL)

(DEFUN THPROGT NIL (THBRANCH) (THPROGA))

(DECLARE (SPECIAL XX))

(DEFUN THPURE
       (XX)
       (ERRSET (MAPC (FUNCTION (LAMBDA (Y) (AND (THVAR Y) (ERR NIL)))) XX)))

(DECLARE (UNSPECIAL XX))

(DECLARE (SPECIAL THTREE))

(DEFUN THPUTPROP
       (ATO VAL IND)
       (THPUSH THTREE (LIST (QUOTE THMUNG)
			    (LIST (LIST (QUOTE PUTPROP)
					(LIST (QUOTE QUOTE) ATO)
					(LIST (QUOTE QUOTE) (GET ATO IND))
					(LIST (QUOTE QUOTE) IND)))))
       (PUTPROP ATO VAL IND))

(DECLARE (UNSPECIAL THTREE))

(DECLARE (SPECIAL THBS THON THAL THFST THNF THWH))

(DECLARE (SPECIAL THFSTP))

(DECLARE (SPECIAL THPC))
(DEFUN THREM1
       (THB)
       (PROG (THA THSV THA1 THA2 THA3 THA4 THA5 THONE THPC)
	     (SETQ THNF (ADD1 THNF))
	     (COND ((AND (ATOM THB)
			 (NOT (EQ THB (QUOTE ?)))
			 (NOT (NUMBERP THB)))
		    (SETQ THA THB))
		   ((OR (EQ THB (QUOTE ?)) (MEMQ (CAR THB) (QUOTE (THV THNV))))
		    (COND (THFST (RETURN (QUOTE THVRB)))
			  ((SETQ THA (QUOTE THVRB)))))
		   ((RETURN (QUOTE THVRB))))
	     (SETQ THA1 (GET THA THWH))
	     (OR THA1 (RETURN NIL))
	     (AND (EQ THA1 (QUOTE THNOHASH)) (RETURN (QUOTE THBQF)))
	     (SETQ THA2 (THBA THNF THA1))
	     (OR THA2 (RETURN NIL))
	     (SETQ THA3 (THBA THAL (CADR THA2)))
	     (OR THA3 (RETURN NIL))
	     (SETQ THA4 (CADR THA3))
	     (SETQ THPC (NOT (EQ THWH (QUOTE THASSERTION))))
	     (SETQ THA5
		   (COND ((OR THFST THFSTP) (THBAP THBS (CDR THA4)))
			 ((THBA (COND (THPC THON) (T (CAR THON))) (CDR THA4)))))
	     (OR THA5 (RETURN NIL))
	     (SETQ THONE (CADR THA5))
	     (RPLACD THA5 (CDDR THA5))
	     (AND (NOT (EQ (CADR THA4) 1))
		  (OR (SETQ THSV (CDDR THA4)) T)
		  (RPLACA (CDR THA4) (SUB1 (CADR THA4)))
		  (RETURN THONE))
	     (SETQ THSV (CDDR THA3))
	     (RPLACD THA3 THSV)
	     (AND (CDADR THA2) (RETURN THONE))
	     (SETQ THSV (CDDR THA2))
	     (RPLACD THA2 THSV)
	     (AND (CDR THA1) (RETURN THONE))
	     (REMPROP THA THWH)
	     (RETURN THONE)))

(DECLARE (UNSPECIAL THPC THBS THON THAL THFST THFSTP THNF THWH))

(DECLARE (SPECIAL THALIST THTREE))

(DEFUN THREMBINDF NIL (SETQ THALIST (CADAR THTREE)) (THPOPT) NIL)

(DECLARE (UNSPECIAL THTREE))

(DECLARE (SPECIAL THTREE THVALUE))

(DEFUN THREMBINDT NIL (SETQ THALIST (CADAR THTREE)) (THPOPT) THVALUE)

(DECLARE (UNSPECIAL THALIST THTREE THVALUE))

(DECLARE (SPECIAL THBS THON THAL THFSTP THFST THNF THWH))
(DEFUN THREMOVE
       (THB)
       (PROG (THB1 THWH THNF THAL THON THBS THFST THFSTP THFOO)
	     (SETQ THNF 0)
	     (SETQ THB1
		   (COND ((ATOM THB)
			  (SETQ THBS THB)
			  (SETQ THWH
				(CAR (SETQ THB1 (GET THB (QUOTE THEOREM)))))
			  (CADDR THB1))
			 ((SETQ THWH (QUOTE THASSERTION)) (SETQ THBS THB))))
	     (SETQ THAL (LENGTH THB1))
	     (SETQ THFST T)
	THP1 (COND ((NULL THB1) (SETQ THB1 THFOO)
				(SETQ THNF 0)
				(SETQ THFST (SETQ THFOO NIL))
				(SETQ THFSTP T)
				(GO THP1))
		   ((NULL (SETQ THON (THREM1 (CAR THB1)))) (RETURN NIL))
		   ((MEMQ THON (QUOTE (THBQF THVRB)))
		    (SETQ THFOO (NCONC THFOO
				       (LIST (COND ((EQ THON (QUOTE THVRB))
						    (CAR THB1))))))
		    (SETQ THB1 (CDR THB1))
		    (GO THP1)))
	     (SETQ THFST NIL)
	     (MAPC (FUNCTION THREM1) (CDR THB1))
	     (SETQ THNF 0)
	     (MAPC (FUNCTION THREM1) THFOO)
	     (RETURN THON)))

(DECLARE (UNSPECIAL THBS THON THAL THFST THFSTP THNF THWH))

(DECLARE (SPECIAL THTREE))

(DEFUN THREMPROP
       (ATO IND)
       (THPUSH THTREE (LIST (QUOTE THMUNG)
			    (LIST (LIST (QUOTE PUTPROP)
					(LIST (QUOTE QUOTE) ATO)
					(LIST (QUOTE QUOTE) (GET ATO IND))
					(LIST (QUOTE QUOTE) IND)))))
       (REMPROP ATO IND))

(DECLARE (UNSPECIAL THTREE))
(DECLARE (SPECIAL THALIST))

(DEFUN THRESTRICT FEXPR (THB)(PROG (X)
(COND   ((ATOM (SETQ X (THGAL (CAR THB)THALIST)))
	 (THPRINTC 'THRESTRICT/ IGNORED/ -/ CONTINUING))
	((THRPLACD (CDR X)(THUNION (CDDR X)(CDR THB)))))
(RETURN X)))

(DECLARE (UNSPECIAL THALIST))

(DEFUN THRETURN FEXPR (X) (APPLY (QUOTE THSUCCEED) (CONS (QUOTE THPROG) X)))

(DECLARE (SPECIAL THTREE THML))

(DEFUN THRPLACA (X Y) (PROG (THML)
			    (THRPLACAS X Y)
			    (THPUSH THTREE (LIST (QUOTE THMUNG) THML))
			    (RETURN X)))

(DECLARE (UNSPECIAL THTREE THML))

(DECLARE (SPECIAL THML))
(DEFUN THRPLACAS
       (X Y)
       (THPUSH THML (LIST (QUOTE THURPLACA) X (CAR X)))
       (RPLACA X Y))

(DEFUN THURPLACA FEXPR (L) (RPLACA (CAR L) (CADR L)))

(DECLARE (UNSPECIAL THML))

(DECLARE (SPECIAL THTREE THML))

(DEFUN THRPLACD (X Y) (PROG (THML)
			    (THRPLACDS X Y)
			    (THPUSH THTREE (LIST (QUOTE THMUNG) THML))
			    (RETURN X)))

(DECLARE (UNSPECIAL THTREE THML))

(DECLARE (SPECIAL THML))

(DEFUN THRPLACDS
       (X Y)
       (THPUSH THML (LIST (QUOTE THURPLACD) X (CDR X)))
       (RPLACD X Y))

(DEFUN THURPLACD FEXPR (L) (RPLACD (CAR L) (CADR L)))

(DECLARE (UNSPECIAL THML))

(DECLARE (SPECIAL THTREE THALIST THVALUE THML))

(DEFUN THSETQ
       FEXPR
       (THL1)
       (PROG (THML THL)
	     (SETQ THL THL1)
	LOOP (COND ((NULL THL) (THPUSH THTREE (LIST (QUOTE THMUNG) THML))
			       (RETURN THVALUE))
		   ((NULL (CDR THL)) (PRINT THL1)
				     (THERT ODD NUMBER OF GOODIES - THSETQ))
		   ((ATOM (CAR THL))
		    (THPUSH THML (LIST (QUOTE SETQ)
				       (CAR THL)
				       (LIST (QUOTE QUOTE) (EVAL (CAR THL)))))
		    (SET (CAR THL) (SETQ THVALUE (EVAL (CADR THL)))))
		   (T (THRPLACAS (CDR (THSGAL (CAR THL)))
				 (SETQ THVALUE (THVAL (CADR THL) THALIST)))))
	     (SETQ THL (CDDR THL))
	     (GO LOOP)))

(DECLARE (UNSPECIAL THTREE THALIST THVALUE THML))

(DECLARE (SPECIAL X THALIST))

(DEFUN THSGAL
       (X)
       (SASSQ (CADR X)
	      THALIST
	      (FUNCTION (LAMBDA NIL
				(PROG (Y)
				      (SETQ Y (LIST (CADR X)
						    (QUOTE THUNASSIGNED)))
				      (NCONC (GET (QUOTE THALIST) (QUOTE VALUE))
					     (LIST Y))
				      (RETURN Y))))))

(DECLARE (UNSPECIAL X THALIST))

(DECLARE (SPECIAL THINDICATORS THP THWH THATOM))

(DEFUN THSTATE FEXPR (THINDICATORS)
   ;PRINTS THAT PART OF THE STATE OF THE MICRO-PLANNER WORLD
   ;SPECIFIED BY THE INDICATORS IN REREADABLE FORM.  NOTE THAT
   ;IT IS BLIND TO ASSERTIONS THAT BEGIN WITH EITHER NUMBERS,
   ;LIST STRUCTURE, NOHASHED ATOMS OR NON-INTERNED ATOMS.
 (PROG (THP)
       (PRINT (QUOTE (THDATA)))
       (MAPC
	(FUNCTION
	 (LAMBDA (BUCKET)
	  (MAPC
	   (FUNCTION
	    (LAMBDA (THATOM)
	     (MAPC
	      (FUNCTION
	       (LAMBDA (THWH)
		(AND
		 (SETQ THP (GET THATOM THWH))
		 (SETQ THP (ASSOC 1 (CDR THP)))
		 (MAPC
		  (FUNCTION
		   (LAMBDA (LENGTH-BUCKET)
		    (MAPC (FUNCTION (LAMBDA (ASRT)
					    (COND ((EQ THWH (QUOTE THASSERTION))
						   (PRINT ASRT))
						  ((PRINT (LIST ASRT))))))
			  (CDDR LENGTH-BUCKET))))
		  (CDR THP)))))
	      (COND (THINDICATORS)
		    ('(THASSERTION THANTE THCONSE THERASING))))))
	   BUCKET)))
	(MAKOBLIST NIL))
       (PRINT NIL)))

(DECLARE (UNSPECIAL THINDICATORS THP THWH THATOM))
(DECLARE (SPECIAL THTREE THALIST THBRANCH THABRANCH THA))

(DEFUN THSUCCEED
       FEXPR
       (THA)
       (OR (NOT THA)
	   (PROG (THX)
		 (AND (EQ (CAR THA) (QUOTE THEOREM))
		      (SETQ THA (CONS (QUOTE THPROG) (CDR THA))))
		 (SETQ THBRANCH THTREE)
		 (SETQ THABRANCH THALIST)
	    LOOP (COND ((NULL THTREE) (PRINT THA) (THERT OVERPOP - THSUCCEED))
		       ((EQ (CAAR THTREE) (QUOTE THREMBIND))
			(SETQ THALIST (CADAR THTREE))
			(THPOPT)
			(GO LOOP))
		       ((EQ (CAAR THTREE) (CAR THA))
			(THPOPT)
			(RETURN (COND ((CDR THA) (EVAL (CADR THA)))
				      ((QUOTE THNOVAL)))))
		       ((AND (EQ (CAR THA) (QUOTE THTAG))
			     (EQ (CAAR THTREE) (QUOTE THPROG))
			     (SETQ THX (MEMQ (CADR THA) (CADDDR (CAR THTREE)))))
			(RPLACA (CDAR THTREE) (CONS NIL THX))
			(RETURN (THPROGT)))
		       (T (THPOPT) (GO LOOP))))))

(DECLARE (UNSPECIAL THTREE THALIST THBRANCH THABRANCH THA))
(DECLARE (SPECIAL XX TYPE THX THY1 THY THXX))

(DEFUN THTAE
 (XX)
 (COND ((EQ (CAR XX) (QUOTE THUSE))
	(MAPCAR (FUNCTION (LAMBDA (X)
				  (COND ((NOT (AND (SETQ THXX
							 (GET X
							      (QUOTE THEOREM)))
						   (EQ (CAR THXX) TYPE)))
					 (PRINT X)
					 (THERT BAD THEOREM /-THTAE))
					((LIST (QUOTE THAPPLY) X (CAR THX))))))
		(CDR XX)))
       ((EQ (CAR XX) (QUOTE THTBF))
	(MAPCAN (FUNCTION (LAMBDA (Y) (COND (((CADR XX) Y)
					     (LIST (LIST (QUOTE THAPPLY)
							 Y
							 (CAR THX)))))))
		(COND (THY1 THY)
		      ((SETQ THY1 T) (SETQ THY (THMATCHTB (CAR THX) TYPE))))))
       (T (PRINT XX) (THERT UNCLEAR RECCOMMENDATION /-THTAE))))

(DECLARE (UNSPECIAL XX TYPE THX THY1 THY THXX))

(DECLARE (SPECIAL THTREE))

(DEFUN THTAG FEXPR (L) (AND (CAR L)
			    (THPUSH THTREE (LIST (QUOTE THTAG) (CAR L)))))

(DECLARE (UNSPECIAL THTREE))

(DEFUN THTAGF NIL (THPOPT) NIL)

(DECLARE (SPECIAL THVALUE))

(DEFUN THTAGT NIL (THPOPT) THVALUE)

(DECLARE (UNSPECIAL THVALUE))

(DEFUN THTRUE (X) T)

(DECLARE (SPECIAL THTREE THOLIST THALIST))
(DEFUN THTRY1 ;TRIES NEXT RECOMMENDATION ON TREE FOR THGOAL
       NIL
       (PROG (THX THY THZ THW THEOREM)
	     (SETQ THZ (CAR THTREE))					;= (THGOAL PATTERN EXPANDED-RECOMMENDATIONS)
	     (SETQ THY (CDDR THZ))					;= RECOMMENDATIONS
	THGOAL3
	     (COND ((NULL (CAR THY)) (RETURN NIL)))			;RECOMMENDATIONS EXHAUSTED. FAIL
	     (SETQ THX (CAAR THY))
	     (GO (CAR THX))
	THDBF(SETQ THOLIST THALIST)
	     (COND ((NULL (CADDR THX)) (RPLACA THY (CDAR THY)) (GO THGOAL3))	;NO MORE CANDIDATES SATISFYING THIS REC.
										;TRY NEXT REC
		   ((PROG2 0
			   (AND ((CADR THX) (SETQ THW (CAADDR THX)))
				(THMATCH1 (CADR THZ) (CAR THW)))
			   (RPLACA (CDDR THX) (CDADDR THX)))
		    (RETURN THW))
		   (T (GO THDBF)))
	THTBF(COND ((NULL (CADDR THX)) (RPLACA THY (CDAR THY)) (GO THGOAL3))	;NO MORE CANDIDATES SATISFYING THIS REC.
										;TRY NEXT REC
		   ((NOT (AND (SETQ THW (GET (SETQ THEOREM (CAADDR THX))
					     (QUOTE THEOREM)))
			      (EQ (CAR THW) (QUOTE THCONSE))))
		    (PRINT THEOREM)
		    (THERT BAD THEOREM - THTRY1))
		   ((PROG2 0
			   (AND ((CADR THX) (CAADDR THX))
				(THAPPLY1 THEOREM THW (CADR THZ)))
			   (RPLACA (CDDR THX) (CDADDR THX)))
		    (RETURN T))
		   (T (GO THTBF)))))

(DECLARE (UNSPECIAL THTREE THOLIST THALIST))

(DECLARE (SPECIAL THZ1 THZ THY1 THY THA2))

(DEFUN THTRY ;APPENDS THMS OR ASSERTIONS THAT SATISFY RECS TO RECS
       (X) ;X = REC, E.G. (THTBF THTRUE)
       (COND ((EQ (CAR X) (QUOTE THTBF))
	      (LIST (QUOTE THTBF)
		    (CADR X)
		    (COND (THZ1 THZ)
			  ((SETQ THZ1 T)
			   (SETQ THZ (THMATCHTB THA2 (QUOTE THCONSE)))))))
	     ((EQ (CAR X) (QUOTE THDBF))
	      (LIST (QUOTE THDBF)
		    (CADR X)
		    (COND (THY1 THY)
			  ((SETQ THY1 T) (SETQ THY (THMATCHDB THA2))))))
	     ((EQ (CAR X) (QUOTE THUSE))
	      (LIST (QUOTE THTBF) (QUOTE THTRUE) (CDR X)))
	     (T (PRINT X) (THERT UNCLEAR RECOMMENDATION - THTRY))))

(DECLARE (UNSPECIAL THZ1 THZ THY1 THY THA2))

(DECLARE (SPECIAL THTREE THALIST THXX))
(DEFUN THUNDOF
       NIL
       (COND ((NULL (CADDAR THTREE)) (THPOPT))
	     (T (SETQ THXX (CDDAR THTREE))
		(SETQ THALIST (CAADR THXX))
		(RPLACA (CDR THXX) (CDADR THXX))
		(SETQ THTREE (CAAR THXX))
		(RPLACA THXX (CDAR THXX))))
       NIL)

(DECLARE (UNSPECIAL THTREE THALIST THXX))

(DEFUN THUNDOT NIL (THPOPT) T)

(DECLARE (SPECIAL THALIST))

(DEFUN THUNIQUE
       FEXPR
       (THA)
       (SETQ THA (CONS (QUOTE THUNIQUE) (MAPCAR (FUNCTION EVAL) THA)))
       (PROG (X)
	     (SETQ X THALIST)
	LP   (COND ((NULL X) (THPUSH THALIST THA) (RETURN T))
		   ((EQ (CAAR X) (QUOTE THUNIQUE))
		    (COND ((EQUAL (CAR X) THA) (RETURN NIL)))))
	     (SETQ X (CDR X))
	     (GO LP)))

(DECLARE (UNSPECIAL THALIST))

(DECLARE (SPECIAL THALIST THXX))

(DEFUN THV1 (X) ;(THV1 'X) IS THE VALUE OF THE PLANNER VARIABLE $?X
		;RETURNS ERROR MESSAGE IF X UNBOUND OR UNASSIGNED
       (SETQ THXX X)
       (COND ((EQ (SETQ X (CADR (SASSQ X
				       THALIST
				       (FUNCTION (LAMBDA NIL
							 (PRINT THXX)
							 (THERT THUNBOUND
								-
								THV1))))))
		  (QUOTE THUNASSIGNED))
	      (PRINT THXX)
	      (THERT THUNASSIGNED - THV1))
	     (T X)))

(DECLARE (UNSPECIAL THALIST THXX))

(DEFUN THV FEXPR (X)
	;(THV X) IS THE VALUE OF THE PLANNER VARIABLE $?X
	(THV1 (CAR X)))
(DECLARE (SPECIAL THLEVEL
		  THSTEP
		  THSTEPF
		  THSTEPT
		  THSTEPD
		  THMESSAGE
		  ^A
		  THV
		  THINF
		  THE
		  THTREE
		  THOLIST
		  THEXP
		  THALIST
		  THVALUE
		  THBRANCH
		  THABRANCH))
(DEFUN THVAL
       (THEXP THALIST)
       (THPUSH THLEVEL (LIST THTREE THALIST))
       (PROG (THTREE THVALUE THBRANCH THOLIST THABRANCH THE THV THMESSAGE)
	     (SETQ THV (QUOTE (THV THNV)))
	GO   (SETQ THE THEXP)
	     (SETQ THEXP NIL)
	     (COND (^A (SETQ ^A NIL) (OR (THERT ^A - THVAL) (GO FAIL))))
	     (COND (THSTEP (EVAL THSTEP)))
	     (COND ((ERRSET (SETQ THVALUE (EVAL THE))))
		   (T (PRINT THE) (SETQ THVALUE (THERT LISPERROR - THVAL))))
	GO1  (COND (THSTEPD (EVAL THSTEPD)))
	     (COND (THINF (GO FAIL))
		   (THEXP (GO GO))
		   (THVALUE (GO SUCCEED))
		   (T (GO FAIL)))
	SUCCEED
	     (COND (THSTEPT (EVAL THSTEPT)))
	     (COND ((NULL THBRANCH) (SETQ THBRANCH THTREE)
				    (SETQ THABRANCH THALIST)))
	     (COND ((NULL THTREE) (SETQ THLEVEL (CDR THLEVEL)) (RETURN THVALUE))
		   ((SETQ THEXP (GET (CAAR THTREE) (QUOTE THSUCCEED))) (GO GO2))
		   ((THERT BAD SUCCEED - THVAL) (GO SUCCEED))
		   ((GO FAIL)))
	FAIL (COND (THSTEPF (EVAL THSTEPF)))
	     (COND ((NULL THTREE) (SETQ THLEVEL (CDR THLEVEL)) (RETURN NIL))
		   ((AND THMESSAGE (COND ((MEMQ (CAAR THTREE)
						(QUOTE (THMUNG THFAIL?
							       THTRACES
							       THMESSAGE
							       THPROG
							       THAND
							       THASSERT
							       THERASE
							       THREMBIND
							       THDO
							       THUNDO)))
					  NIL)
					 (T (THPOPT) (GO FAIL)))))
		   ((SETQ THEXP (GET (CAAR THTREE) (QUOTE THFAIL))) (GO GO2))
		   ((THERT BAD FAIL - THVAL) (GO SUCCEED))
		   ((GO FAIL)))
	GO2  (SETQ THVALUE ((PROG2 0 THEXP (SETQ THEXP NIL))))
	     (GO GO1)))
(DECLARE (UNSPECIAL THSTEP
		    THSTEPF
		    THSTEPT
		    THSTEPD
		    THLEVEL
		    THMESSAGE
		    ^A
		    THV
		    THINF
		    THE
		    THTREE
		    THOLIST
		    THEXP
		    THALIST
		    THVALUE
		    THBRANCH
		    THABRANCH))

(DEFUN THVAR (X) ;PREDICATE - IS ITS INPUT A PLANNER VARIABLE
	(MEMQ (CAR X) (QUOTE (THV THNV))))

(DECLARE (SPECIAL THALIST THV))

(DEFUN THVARS2 (X) (PROG (A)
			 (AND (EQ (CAR X) (QUOTE THEV))
			      (SETQ X (THVAL (CADR X) THALIST)))
			 (OR (MEMQ (CAR X) THV) (RETURN X))
			 (SETQ A (THGAL X THALIST))
			 (RETURN (COND ((EQ (CADR A) (QUOTE THUNASSIGNED)) X)
				       (T (CADR A))))))

(DECLARE (UNSPECIAL THALIST THV))

(DECLARE (SPECIAL THALIST THV))

(DEFUN THVARSUBST
       (THX)
       (COND ((EQ (CAR THX) (QUOTE THEV)) (SETQ THX (THVAL (CADR THX) THALIST)))
	     ((MEMQ (CAR THX) THV) (SETQ THX (EVAL THX))))
       (COND ((ATOM THX) THX) (T (MAPCAR (FUNCTION THVARS2) THX))))

(DECLARE (UNSPECIAL THALIST THV))

(DECLARE (SPECIAL THALIST THVALUE THA))

(DEFUN THVSETQ
       FEXPR
       (THA)
       (PROG (A)
	     (SETQ A THA)
	LOOP (COND ((NULL A) (RETURN THVALUE))
		   ((NULL (CDR A)) (PRINT THA)
				   (THERT ODD NUMBER OF GOODIES-THSETQ))
		   (T (SETQ THVALUE (CAR (RPLACA (CDR (THSGAL (CAR A)))
						 (THVAL (CADR A) THALIST))))))
	     (SETQ A (CDDR A))
	     (GO LOOP)))

(DECLARE (UNSPECIAL THALIST THVALUE THA))

(DEFPROP THTAG THTAGF THFAIL)

(DEFPROP THTAG THTAGT THSUCCEED)

(DEFPROP THGOAL THGOALT THSUCCEED)

(DEFPROP THGOAL THGOALF THFAIL)

(DEFPROP THFAIL? THFAIL?F THFAIL)

(DEFPROP THFAIL? THFAIL?T THSUCCEED)

(DEFPROP THAMONG THAMONGF THFAIL)

(DEFPROP THFIND THFINDF THFAIL)

(DEFPROP THFIND THFINDT THSUCCEED)

(DEFPROP THPROG THPROGT THSUCCEED)

(DEFPROP THAND THANDT THSUCCEED)

(DEFPROP THMUNG THMUNGT THSUCCEED)

(DEFPROP THERASE THERASET THSUCCEED)

(DEFPROP THASSERT THASSERTT THSUCCEED)

(DEFPROP THOR THORT THSUCCEED)

(DEFPROP THCOND THCONDT THSUCCEED)

(DEFPROP THAND THANDF THFAIL)

(DEFPROP THPROG THPROGF THFAIL)

(DEFPROP THMUNG THMUNGF THFAIL)

(DEFPROP THASSERT THASSERTF THFAIL)

(DEFPROP THERASE THERASEF THFAIL)

(DEFPROP THCOND THCONDF THFAIL)

(DEFPROP THOR THORF THFAIL)

(DEFPROP THDO THDOB THSUCCEED)

(DEFPROP THDO THDOB THFAIL)

(DEFPROP THUNDO THUNDOF THFAIL)

(DEFPROP THUNDO THUNDOT THSUCCEED)

(DEFPROP THMESSAGE THMESSAGEF THFAIL)

(DEFPROP THMESSAGE THMESSAGET THSUCCEED)

(DEFPROP THREMBIND THREMBINDT THSUCCEED)

(DEFPROP THREMBIND THREMBINDF THFAIL)

(DECLARE (SPECIAL THALIST THLEVEL THINF))

(DEFUN THERT
       FEXPR
       (/0ERTA)
       (PROG (/0LISTEN ^W ^Q)
	     (PRINT (QUOTE >>>))
		(COND ((EQ (CAR /0ERTA )'TH%/0%)(MAPC (FUNCTION THPRINT2)(CDR /0ERTA))(IOC Q))
			(  (MAPC (FUNCTION THPRINT2) /0ERTA)
		     (PRINT (QUOTE LISTENING))
		     (OR THLEVEL (THPRINT2 (QUOTE THVAL)))))		;THLEVAL = NIL IMPLIES AT TOP LEVEL
	/0LISTEN
	     (SETQ THINF NIL)
	     (TERPRI)
	     (ERRSET (COND ((EQ (SETQ /0LISTEN (READ)) (QUOTE P)) (RETURN T))	;$P IMPLIES PROCEDE
			   ((AND (NOT (ATOM /0LISTEN))			;($P EXP) IMPLIES PROCEDE AND OUTPUT (EVAL EXP)
				 (EQ (CAR /0LISTEN) (QUOTE P)))
			    (RETURN (EVAL (CADR /0LISTEN))))
			   (THLEVEL (PRINT (EVAL /0LISTEN)))		;EVAL LISTENING IF NOT AT TOP LEVEL
			   (T (PRINT (THVAL /0LISTEN THALIST)))))	;THVAL LISTENING AT TOP LEVEL
	     (GO /0LISTEN)))

(DECLARE (SPECIAL PURE LOW THXX THTRACE THALIST THTREE ERRLIST THGENAME THLEVEL))

(DEFUN THINIT
       FEXPR
       (L)
       (COND ((AND L PURE) (LAPPURIFY LOW (PAGEBPORG)) (SETQ PURE NIL)))
       (SETQ THGENAME 0)
       (SETQ THSTEP NIL)
       (SETQ THSTEPD NIL)
       (SETQ THSTEPT NIL)
       (SETQ THSTEPF NIL)
       (SETQ THXX NIL)
       (SETQ THTRACE NIL)
       (SETQ THALIST (QUOTE ((NIL NIL))))
       (SSTATUS MACRO /$ (QUOTE THREAD))
       (SSTATUS MACRO /; (QUOTE THSEMI) S)
       (SETQ ERRLIST (QUOTE ((PRINT (QUOTE MICRO-PLANNER))
			     (PRINC THVERSION)
			(COND ((ERRSET (APPLY 'UREAD (APPEND '(/.PLNR/. /(INIT/))(CRUNIT)))())
				 (SETQ THTREE ())
				(SETQ THLEVEL ())
				(SETQ ERRLIST (CDDDR ERRLIST))
				(THERT TH%/0% READING /.PLNR/. /(INIT/))))
			     (SETQ THINF NIL)
			     (SETQ THTREE NIL)
			     (SETQ THLEVEL NIL)
			     (THERT TOP LEVEL)))))

(DECLARE (UNSPECIAL PURE LOW THXX THTRACE THALIST ERRLIST THTREE THLEVEL THGENAME THINF))
